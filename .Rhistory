initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all(".")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = TRUE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = TRUE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = FALSE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
devtools::load_all("C:/GitHub/nimbIMC")
devtools::load_all("C:/GitHub/nimbIMC")
occSpatialModel <- INLAWiNimDataGeneratingTargetDivide(data = c("y"),
covariate = x,
code = code,
family = "binomial",
modelData = inla_data,
modelConstants = const,
modelInits = idm_inits,
nimbleINLA = nimbleINLA,
inlaMCMC = "importanceSampling",
samplerControl = list( scale = sqrt(10),
adaptive = TRUE,
sliceMaxSteps = 30,
extraVars = c("z"),
initMean = rnorm(3,0,1),
initCov= 2*diag(3),
initEcoPars = 0.1,
proposal = "normal",
latentIsDependent = FALSE,
spatioTemporal = TRUE,
nCores = 1),#if nCores>1, we cannot run the code o windows
parametersToMonitor = list(mcmc = c("alpha0","alpha",  "z"),
mcmcINLA = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
inla = c("beta0", "beta[1]", "beta[2]",  "sigma", "theta1"),
additionalPars = c("psi.fs")),
mcmcConfiguration = list(n.chains = 2,
n.iterations = 10,
n.burnin = 2,
n.thin = 1,
setSeed = TRUE,
samples=TRUE,
samplesAsCodaMCMC = TRUE,
summary = TRUE,
WAIC = FALSE)
)
