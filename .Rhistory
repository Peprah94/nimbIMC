#Predcit with lasso on test data
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
#Fit model to complete dataset
out <- glmnet(x, y, alpha = 1, lambda = grid,intercept=F)
lasso.coef <- predict(out, type = "coefficients", s = bestlam)
#Fitted values
lasso.fitted <- predict(out, s = bestlam, newx = x)
lasso.fitted
out
lasso.coef
getwd()
setwd("~/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation")
save(lasso.coef, file = "lassoGLMNET.RData")
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <-
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <- lasso.coef%>%
as.data.frame()
library(dplyr)
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <- lasso.coef%>%
as.data.frame()
library(dplyr)
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <- unlist(lasso.coef)
glmnetRes
library(dplyr)
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <- as.data.frame(unlist(lasso.coef))
library(dplyr)
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
glmnetRes <- as.matrix(unlist(lasso.coef))
glmnetRes
nimLasso$summary$all.chains
nimble <- nimLasso$summary$all.chains[1:6, 1]
nimble
#add the one from INLA nimble
allRes <- cbind(glmnetRes, nimble)
allRes
library(kableExtra)
knitr::kable(allRes, digits = 4)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "An example table caption.",   col.names = c('glmnet', 'NIMBLE'))
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from glmnet, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('glmnet', 'NIMBLE'))
load("BayesianLassoResults.RData")
inlaNimLasso$output
inlaNimLasso$mcmc.out$summary
library(dplyr)
load("lassoGLMNET.RData")
load("nimBayesianLasso.RData")
load("BayesianLassoResults.RData")
glmnetRes <- as.matrix(unlist(lasso.coef))
nimble <- nimLasso$summary$all.chains[1:6, 1]
#add the one from INLA nimble
allRes <- cbind(glmnetRes, nimble)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from glmnet, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('glmnet', 'NIMBLE'))
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
data("hitters_data")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
df$x
load("hitters_data.RData")
#Packages
library(nimble)
library(INLA)
library(mvtnorm)
library(MASS)
library(parallel)
library(coda)
library(ggmcmc)
code <- nimbleCode({
# est_lam ~ dgamma(shape=1, rate=0.0005)
#Prior for beta1 and beta2
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0,rate=est_lam)
}
prec ~ dgamma(shape=1, rate=0.00005)
#Fitting the inla with the simulated parameters
# linear model specification
for(i in 1:N){
linpred[i] <- alpha + beta[1]*x[i,1] + beta[2]*x[i,2] + beta[3]*x[i,3] + beta[4]*x[i,4] + beta[5]*x[i,5]
y[i] ~ dnorm(linpred[i],tau=prec )
}
})
## Parameterising the nimble model
df <- lassoDataDF
#Data
inla_data <- list(y=as.numeric(df$y),
x = df$x)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
#bayesian Lasso
load("hitters_data.RData")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from glmnet, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('glmnet', 'NIMBLE'))%>%
kable_styling(font_size = 7)
load("BayesianLassoResults.RData")
inlaNimLasso$output
inlaNimLasso$mcmc.out$summary
const$P
load("hitters_data.RData")
getwd()
setwd("/Volumes/kwakupa/INLAWithinMCMC/Bayesian Lasso")
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
load("hitters_data.RData")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
load("hitters_data.RData")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
# Initial values
idm_inits <- function(){list(alpha = 0,
beta=rep(0,const$P)
)
}
const$P
df$x
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
load("hitters_data.RData")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
#bayesian Lasso
load("hitters_data")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
# Initial values
idm_inits <- function(){list(alpha = 0,
beta=rep(0,const$P)
)
}
const$P
setwd("~/OneDrive - NTNU/GitHub/Thesis/INLA within NIMBLE/Bayesian Lasso")
load("hitters_data.RData")
#bayesian Lasso
load("hitters_data")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
df <- lassoDataDF
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
setwd("/Volumes/kwakupa/INLAWithinMCMC/Bayesian Lasso")
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
load("hitters_data")
setwd("/Volumes/kwakupa/INLAWithinMCMC/Bayesian Lasso")
# Bivariate regression
library(myphdthesis)
library(nimble)
library(INLA)
#bayesian Lasso
load("hitters_data")
#bayesian Lasso
load("hitters_data.RData")
code <- nimbleCode({
alpha ~ dnorm(0,1)
for(j in 1:P){
beta[j] ~ ddexp(location = 0, rate=est_lam)
}
#Fitting the inla with the simulated parameters
inla.res[1:N, 1:3] <- nimbleINLA(x[1:N,1:P],y_obs[1:N],beta[1:P], interInModel)
#linpred[1:N] <- inla.res[1:100,3]
sigma <- inla.res[1,2]
linpred[1:N] <-  inla.res[1:N, 3] + alpha
intercept <- inla.res[1,2]
# linear model specification
for(i in 1:N){
y[i] ~ dnorm(linpred[i], tau=sigma)
}
# tau <- sigma
#intercept <- inla.res[1,1]
})
df <- lassoDataDF
inla_data <- list(y=as.numeric(df$y),
x = df$x,
y_obs=as.numeric(df$y),
interInModel = 2)
#Constants
const <- list(N = length(df$y),
P= ncol(df$x),
est_lam = 1/0.073
)
const$P
load("/Users/kwakupa/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation/BayesianRegression.RData")
inlaNimBivariate
inlaNimBivariate$output
load("~/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation/nimBayesianRegression.RData")
nimBivariate$summary
load("~/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation/BayesianRegression.RData")
load("~/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation/inlaBayesianRegression.RData")
inlaBivariate$summary.fixed
load("nimBayesianRegression.RData")
load("inlaNimBayesian.RData")
load("BayesianRegression.RData")
load("nimBayesianRegression.RData")
nimBivariate$summary
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaNimBivariate$output
load("BayesianRegression.RData")
inlaNimBivariate$output
load("/Volumes/kwakupa/INLAWithinMCMC/Bivariate regression/inlaBayesianRegression.RData")
inlaBivariate$summary.fixed
inlaBivariate$summary.hyperpar
inla <- c(inlaBivariate$summary.fixed[,1], inlaBivariate$summary.hyperpar[,1])
library(dplyr)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("BayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1], inlaBivariate$summary.hyperpar[,1])
ry
library(dplyr)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("BayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1], inlaBivariate$summary.hyperpar[,1])
#add the one from INLA nimble
allRes <- cbind( nimble, inlaWithinNimble, inla)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from INLA, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('nimble', 'inlaWiNimble', 'inla'))%>%
kable_styling(font_size = 7)
library(dplyr)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("BayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1], inlaBivariate$summary.hyperpar[,1])
#add the one from INLA nimble
allRes <- cbind( nimble, inlaWithinNimble, inla)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from INLA, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('nimble', 'inlaWiNimble', 'inla'))%>%
kable_styling(font_size = 10)
getwd()
setwd("~/Documents/GitHub/myphdthesis/testthat/FiguresForPresentation")
library(dplyr)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("BayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1],inlaBivariate$summary.hyperpar[,1])
load("BayesianRegression.RData")
load("/Volumes/kwakupa/INLAWithinMCMC/Bivariate regression/BayesianRegression.RData")
load("/Volumes/kwakupa/INLAWithinMCMC/Bivariate regression/inlaBayesianRegression.RData")
library(dplyr)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesian.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("inlaBayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1],inlaBivariate$summary.hyperpar[,1])
#add the one from INLA nimble
allRes <- cbind( nimble, inlaWithinNimble, inla)
load("inlaNimBayesianRegression.RData")
library(dplyr)
library(myphdthesis)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesianRegression.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("inlaBayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1],inlaBivariate$summary.hyperpar[,1])
#add the one from INLA nimble
allRes <- cbind( nimble, inlaWithinNimble, inla)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from INLA, NIMBLE and the INLA withinn NIMBLE approach",   col.names = c('nimble', 'inlaWiNimble', 'inla'))%>%
kable_styling(font_size = 40)
truth <- c(2, 3, -3, 1)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from INLA, NIMBLE and the INLA within NIMBLE approach",   col.names = c('truth', 'nimble', 'inlaWiNimble', 'inla'))%>%
kable_styling(font_size = 30)
library(dplyr)
library(myphdthesis)
load("nimBayesianRegression.RData")
nimble <- nimBivariate$summary[,1]
load("inlaNimBayesianRegression.RData")
inlaWithinNimble <- inlaNimBivariate$output[,1]
load("inlaBayesianRegression.RData")
inla <- c(inlaBivariate$summary.fixed[,1],inlaBivariate$summary.hyperpar[,1])
truth <- c(2, 3, -3, 1)
#add the one from INLA nimble
allRes <- cbind( truth, nimble, inlaWithinNimble, inla)
library(kableExtra)
knitr::kable(allRes, digits = 4, caption = "Results from INLA, NIMBLE and the INLA within NIMBLE approach",   col.names = c('truth', 'nimble', 'inlaWiNimble', 'inla'))%>%
kable_styling(font_size = 30)
devtools::load_all()
devtools::document()
library(myphdthesis)
