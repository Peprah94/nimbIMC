% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postMCMCalterations.R
\name{compareModelsPlots}
\alias{compareModelsPlots}
\title{Create an auxiliary particle filter algorithm to estimate log-likelihood.}
\usage{
compareModelsPlots(
  models = list(),
  modelNames = NULL,
  n.chains = NULL,
  nodes = c(),
  method = "bm",
  metrics = list(ESS = TRUE, efficiency = TRUE, MCse = TRUE, traceplot = TRUE)
)
}
\arguments{
\item{models}{A list of MCMC models we are interested in returning results for}

\item{nodes}{A vector name of nodes we are interested in returning results for}

\item{method}{The method to use for estimating the Monte Carlo standard error. For details, check the vignette of mcmcse package.}
}
\description{
Returns Monte Carlo Standard error, effective sample size and efficiency of individual parameters
}
\examples{
## For illustration only.
exampleCode <- nimbleCode({
  x0 ~ dnorm(0, var = 1)
  x[1] ~ dnorm(.8 * x0, var = 1)
  y[1] ~ dnorm(x[1], var = .5)
  for(t in 2:10){
    x[t] ~ dnorm(.8 * x[t-1], var = 1)
    y[t] ~ dnorm(x[t], var = .5)
  }
})

model <- nimbleModel(code = exampleCode, data = list(y = rnorm(10)),
                     inits = list(x0 = 0, x = rnorm(10)))
my_AuxF <- buildAuxiliaryFilter(model, 'x',
                control = list(saveAll = TRUE, lookahead = 'mean'))
## Now compile and run, e.g.,
## Cmodel <- compileNimble(model)
## Cmy_AuxF <- compileNimble(my_AuxF, project = model)
## logLik <- Cmy_AuxF$run(m = 1000)
## ESS <- Cmy_AuxF$returnESS()
## aux_X <- as.matrix(Cmy_AuxF$mvEWSamples, 'x')
}
\references{
Pitt, M.K., and Shephard, N. (1999). Filtering via simulation: Auxiliary particle filters. \emph{Journal of the American Statistical Association} 94(446): 590-599.
}
\seealso{
Other updating particle filters: 
\code{\link{compareModelsIndividualPars}()}
}
\author{
Kwaku Peprah Adjei
}
\concept{updating particle filters}
